name: EDTEAM FastAPI demo

on:
  push:
    branches:
      - master
      - develop

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pip install pytest
          pytest test/test.py

      - name: docker build
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/edteam-fastapi-demo:${{ github.sha }} .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: docker push
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/edteam-fastapi-demo:${{ github.sha }}

  cd:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1
        env:
          DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/edteam-fastapi-demo:${{ github.sha }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: DOCKER_IMAGE
          script: |
            echo "Download new version"
            docker pull $DOCKER_IMAGE
            echo "Stop current version"
            sleep 1
            API=$(docker ps -q -f name=api)
            if [! -z $API ]
            then
              docker stop $API
              docker rm $API
              fi
              docker run -d --name api -p 80:8080 $DOCKER_IMAGE

      - name: Checkout service
        env:
          ENDPOINT: ${{ secrets.ENDPOINT }}
        run: |
          RESPONSE=$(curl -o /dev/null -s -w "%{http_code}\n" ${ENDPOINT})
          if [ $RESPONSE -ne "200"]
          then
            echo "Service unresponsive"
            exit 1
          fi
          echo "Successfully"
